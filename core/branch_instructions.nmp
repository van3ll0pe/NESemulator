op BCC(offset : card(8))
    syntax = format("BCC #%2x", offset)
    image = format("%8b %8b", 0x90, offset)
    action = {
        let address: card(16) = 0;
        REL(address, offset);

        cycle = cycle + 2;

        if SR_C == 0 then
            cycle = cycle + 1;

            if (address & 0xFF00) != (PC & 0xFF00) then
                cycle = cycle + 1;
            endif;
            PC = address;
        endif;
    }

op BCS(offset : card(8))
    syntax = format("BCS #%2x", offset)
    image = format("%8b %8b", 0xB0, offset)
    action = {
        let address: card(16) = 0;
        REL(address, offset);

        cycle = cycle + 2;

        if SR_C == 1 then
            cycle = cycle + 1;

            if (address & 0xFF00) != (PC & 0xFF00) then
                cycle = cycle + 1;
            endif;
            PC = address;
        endif;
    }

op BEQ(offset : card(8))
    syntax = format("BEQ #%2x", offset)
    image = format("%8b %8b", 0xF0, offset)
    action = {
        let address: card(16) = 0;
        REL(address, offset);

        cycle = cycle + 2;

        if SR_Z == 1 then
            cycle = cycle + 1;
            if (address & 0xFF00) != (PC & 0xFF00) then
                cycle = cycle + 1;
            endif;
            PC = address;
        endif;
    }

op BNE(offset : card(8))
    syntax = format("BNE #%2x", offset)
    image = format("%8b %8b", 0xD0, offset)
    action = {
        let address: card(16) = 0;
        REL(address, offset);

        cycle = cycle + 2;

        if SR_Z == 0 then
            cycle = cycle + 1;
            if (address & 0xFF00) != (PC & 0xFF00) then
                cycle = cycle + 1;
            endif;
            PC = address;
        endif;
    }

op BMI(offset : card(8))
    syntax = format("BMI #%2x", offset)
    image = format("%8b %8b", 0x30, offset)
    action = {
        let address: card(16) = 0;
        REL(address, offset);

        cycle = cycle + 2;

        if SR_N == 1 then
            cycle = cycle + 1;
            if (address & 0xFF00) != (PC & 0xFF00) then
                cycle = cycle + 1;
            endif;
            PC = address;
        endif;
    }

op BPL(offset : card(8))
    syntax = format("BPL #%2x", offset)
    image = format("%8b %8b", 0x10, offset)
    action = {
        let address: card(16) = 0;
        REL(address, offset);

        cycle = cycle + 2;

        if SR_N == 0 then
            cycle = cycle + 1;
            if (address & 0xFF00) != (PC & 0xFF00) then
                cycle = cycle + 1;
            endif;
            PC = address;
        endif;
    }

op BVS(offset : card(8))
    syntax = format("BVS #%2x", offset)
    image = format("%8b %8b", 0x70, offset)
    action = {
        let address: card(16) = 0;
        REL(address, offset);

        cycle = cycle + 2;

        if SR_V == 1 then
            cycle = cycle + 1;
            if (address & 0xFF00) != (PC & 0xFF00) then
                cycle = cycle + 1;
            endif;
            PC = address;
        endif;
    }

op BVC(offset : card(8))
    syntax = format("BVC #%2x", offset)
    image = format("%8b %8b", 0x50, offset)
    action = {
        let address: card(16) = 0;
        REL(address, offset);

        cycle = cycle + 2;

        if SR_V == 0 then
            cycle = cycle + 1;
            if (address & 0xFF00) != (PC & 0xFF00) then
                cycle = cycle + 1;
            endif;
            PC = address;
        endif;
    }