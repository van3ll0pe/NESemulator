op ASL = ASL_ACCUMULATOR | ASL_ZEROPAGE | ASL_ZEROPAGE_X | ASL_ABSOLUTE | ASL_ABSOLUTE_X

op ASL_ACCUMULATOR
    syntax = "ASL A"
    image = format("%8b", 0x0A)
    action = {
        SR_C = A<7..7>

        A = A << 1;

        cycle = 2;

        update_N(A);
        update_Z(A);
    }

op ASL_ZEROPAGE(address_lo : card(8))
    syntax = format("ASL $%2x", address_lo)
    image = format("%8b %8b", 0x06, address_lo)
    action = {
        var address[card(16)] = 0;
        ZPG(address, address_lo);
        var value[card(8)] = 0;
        load(address, value);

        SR_C = value<7..7>;

        value = value << 1;
        store(address, value);

        cycle = 5;
        update_N(value);
        update_Z(value);
    }

op ASL_ZEROPAGE_X(address_lo : card(8))
    syntax = format("ASL $%2x, X", address_lo)
    image = format("%8b %8b", 0x16, address_lo)
    action = {
        var address[card(16)] = 0;
        ZPG_X(address, address_lo);
        var value[card(8)] = 0;
        load(address, value);

        SR_C = value<7..7>;

        value = value << 1;
        store(address, value);

        cycle = 6;
        update_N(value);
        update_Z(value);
    }

op ASL_ABSOLUTE(address_lo : card(8), address_hi : card(8))
    syntax = format("ASL $%2x%2x", address_hi, address_lo)
    image = format("%8b %8b %8b", 0x0E, address_lo, address_hi)
    action = {
        var address[card(16)] = 0;
        ABS(address, address_lo, address_hi);
        var value[card(8)] = 0;
        load(address, value);

        SR_C = value<7..7>;

        value = value << 1;
        store(address, value);

        cycle = 6;
        update_N(value);
        update_Z(value);
    }

op ASL_ABSOLUTE_X(address_lo : card(8), address_hi : card(8))
    syntax = format("ASL $%2x%2x, X", address_hi, address_lo)
    image = format("%8b %8b %8b", 0x1E, address_lo, address_hi)
    action = {
        var address[card(16)] = 0;
        ABS_X(address, address_lo, address_hi);
        var value[card(8)] = 0;
        load(address, value);

        SR_C = value<7..7>;

        value = value << 1;
        store(address, value);

        cycle = 7;
        update_N(value);
        update_Z(value);
    }

//-----------------------------------------------------------------

op LSR = LSR_ACCUMULATOR | LSR_ZEROPAGE | LSR_ZEROPAGE_X | LSR_ABSOLUTE | LSR_ABSOLUTE_X

op LSR_ACCUMULATOR
    syntax = "LSR A"
    image = format("%8b", 0x4A)
    action = {

        SR_C = A<0..0>;

        A = A >> 1;

        cycle = 2;
        update_Z(A);
        SR_N = 0;
    }

op LSR_ZEROPAGE(address_lo : card(8))
    syntax = format("LSR $%2x", address_lo)
    image = format("%8b %8b", 0x46, address_lo)
    action = {
        var address[card(16)] = 0;
        ZPG(address, address_lo);
        var value[card(8)] = 0;
        load(address, value);

        SR_C = value<0..0>;

        value = value >> 1;

        store(address, value);
        cycle = 5;
        SR_N = 0;
        update_Z(value);
    }

op LSR_ZEROPAGE_X(address_lo : card(8))
    syntax = format("LSR $%2x, X", address_lo)
    image = format("%8b %8b", 0x56, address_lo)
    action = {
        var address[card(16)] = 0;
        ZPG_X(address, address_lo);
        var value[card(8)] = 0;
        load(address, value);

        SR_C = value<0..0>;

        value = value >> 1;

        store(address, value);
        cycle = 6;
        SR_N = 0;
        update_Z(value);
    }

op LSR_ABSOLUTE(address_lo : card(8), address_hi : card(8))
    syntax = format("LSR $%2x%2x", address_hi, address_lo)
    image = format("%8b %8b %8b", 0x4E, address_lo, address_hi)
    action = {
        var address[card(16)] = 0;
        ABS(address, address_lo, address_hi);
        var value[card(8)] = 0;
        load(address, value);

        SR_C = value<0..0>;

        value = value >> 1;

        store(address, value);
        cycle = 6;
        SR_N = 0;
        update_Z(value);
    }

op LSR_ABSOLUTE_X(address_lo : card(8), address_hi : card(8))
syntax = format("LSR $%2x%2x, X", address_hi, address_lo)
    image = format("%8b %8b %8b", 0x5E, address_lo, address_hi)
    action = {
        var address[card(16)] = 0;
        ABS_X(address, address_lo, address_hi);
        var value[card(8)] = 0;
        load(address, value);

        SR_C = value<0..0>;

        value = value >> 1;

        store(address, value);
        cycle = 7;
        SR_N = 0;
        update_Z(value);
    }

//-----------------------------------------------------------------

op ROL = ROL_ACCUMULATOR | ROL_ZEROPAGE | ROL_ZEROPAGE_X | ROL_ABSOLUTE | ROL_ABSOLUTE_X

op ROL_ACCUMULATOR
    syntax = "ROL A"
    image = format("%8b", 0x2A)
    action = {
        var carry[card(1)] = A<7..7>;
        A = A << 1;
        A<0..0> = SR_C;
        SR_C = carry;

        cycle =  2;

        update_N(A);
        update_Z(A);
    }

op ROL_ZEROPAGE(address_lo : card(8))
    syntax = format("ROL $%2x", address_lo)
    image = format("%8b %8b", 0x26, address_lo)
    action = {
        var address[card(16)] = 0;
        ZPG(address, address_lo);
        var value[card(8)] = 0;
        load(address, value);

        var carry[card(1)] = value<7..7>;
        value = value << 1;
        value<0..0> = SR_C;
        SR_C = carry;

        store(address, value);

        cycle = 5;

        update_N(value);
        update_Z(value);
    }

op ROL_ZEROPAGE_X(address_lo : card(8))
    syntax = format("ROL %2x, X", address_lo)
    image = format("%8b %8b", 0x36, address_lo)
    action = {
        var address[card(16)] = 0;
        ZPG_X(address, address_lo);
        var value[card(8)] = 0;
        load(address, value);

        var carry[card(1)] = value<7..7>;
        value = value << 1;
        value<0..0> = SR_C;
        SR_C = carry;

        store(address, value);

        cycle =  6;

        update_N(value);
        update_Z(value);
    }

op ROL_ABSOLUTE(address_lo : card(8), address_hi : card(8))
    syntax = format("ROL $%2x%2x", address_hi, address_lo)
    image = format("%8b %8b %8b", 0x2E, address_lo, address_hi)
    action = {
        var address[card(16)] = 0;
        ABS(address, address_lo, address_hi);
        var value[card(8)] = 0;
        load(address, value);

        var carry[card(1)] = value<7..7>;
        value = value << 1;
        value<0..0> = SR_C;
        SR_C = carry;

        store(address, value);

        cycle = 6;

        update_N(value);
        update_Z(value);
    }

op ROL_ABSOLUTE_X(address_lo : card(8), address_hi : card(8))
    syntax = format("ROL $%2x%2x", address_hi, address_lo)
    image = format("%8b %8b %8b", 0x3E, address_lo, address_hi)
    action = {
        var address[card(16)] = 0;
        ABS_X(address, address_lo, address_hi);
        var value[card(8)] = 0;
        load(address, value);

        var carry[card(1)] = value<7..7>;
        value = value << 1;
        value<0..0> = SR_C;
        SR_C = carry;

        store(address, value);

        cycle =  7;

        update_N(value);
        update_Z(value);
    }

//-----------------------------------------------------------------

op ROR = ROR_ACCUMULATOR | ROR_ZEROPAGE | ROR_ZEROPAGE_X | ROR_ABSOLUTE | ROR_ABSOLUTE_X

op ROR_ACCUMULATOR
    syntax = "ROR A"
    image = format("%8b", 0x6A)
    action = {
        var carry[card(1)] = A<0..0>;
        A = A >> 1;
        A<7..7> = SR_C;
        SR_C = carry;

        cycle = 2;

        update_N(A);
        update_Z(A);
    }

op ROR_ZEROPAGE(address_lo : card(8))
    syntax = format("ROR $%2x", address_lo)
    image = format("%8b %8b", 0x66, address_lo)
    action = {
        var address[card(16)] = 0;
        ZPG(address, address_lo);
        var value[card(8)] = 0;
        load(address, value);

        var carry[card(1)] = value<0..0>;
        value = value >> 1;
        value<7..7> = SR_C;
        SR_C = carry;

        store(address, value);

        cycle = 5;

        update_N(value);
        update_Z(value);
    }

op ROR_ZEROPAGE_X(address_lo : card(8))
    syntax = format("ROR $%2x, X", address_lo)
    image = format("%8b %8b", 0x76, address_lo)
    action = {
        var address[card(16)] = 0;
        ZPG_X(address, address_lo);
        var value[card(8)] = 0;
        load(address, value);

        var carry[card(1)] = value<0..0>;
        value = value >> 1;
        value<7..7> = SR_C;
        SR_C = carry;

        store(address, value);

        cycle = 6;

        update_N(value);
        update_Z(value);
    }

op ROR_ABSOLUTE(address_lo : card(8), address_hi : card(8))
    syntax = format("ROR $%2x%2x", address_hi, address_lo)
    image = format("%8b %8b %8b", 0x6E, address_lo, address_hi)
    action = {
        var address[card(16)] = 0;
        ABS(address, address_lo, address_hi);
        var value[card(8)] = 0;
        load(address, value);

        var carry[card(1)] = value<0..0>;
        value = value >> 1;
        value<7..7> = SR_C;
        SR_C = carry;

        store(address, value);

        cycle = 6;

        update_N(value);
        update_Z(value);
    }

op ROR_ABSOLUTE_X(address_lo : card(8), address_hi : card(8))
    syntax = format("ROR $%2x%2x, X", address_hi, address_lo)
    image = format("%8b %8b %8b", 0x7E, address_lo, address_hi)
    action = {
        var address[card(16)] = 0;
        ABS_X(address, address_lo, address_hi);
        var value[card(8)] = 0;
        load(address, value);

        var carry[card(1)] = value<0..0>;
        value = value >> 1;
        value<7..7> = SR_C;
        SR_C = carry;

        store(address, value);

        cycle = 7;

        update_N(value);
        update_Z(value);
    }