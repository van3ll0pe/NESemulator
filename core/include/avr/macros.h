/* Generated by gep (125/04/14 21:47:43) copyright (c) 2008 IRIT - UPS */
#ifndef GLISS_AVR_INCLUDE_AVR_MACROS_H
#define GLISS_AVR_INCLUDE_AVR_MACROS_H

/* state access macros */
#define AVR_SKIP_NEXT ((state)->SKIP_NEXT)
#define AVR_SREG ((state)->SREG)
#define AVR_IO ((state)->IO)
#define AVR_SP ((state)->SP)
#define AVR_R ((state)->R)
#define AVR_PC ((state)->PC)

#define AVR_FLASH ((state)->FLASH)
#define AVR_M ((state)->M)



/* instruction size macros, not used anymore, replaced by more efficient and less costly */
/*#define AVR_CALL_D__LP_04X_RP__SIZE	32
#define AVR_JMP_D__LP_04X_RP__SIZE	32
#define AVR_STS_D__RD_SIZE	32
#define AVR_LDS_RD__0X04X_SIZE	32
#define AVR_BRID___P_D__3B__P_04X_SIZE	16
#define AVR_BRIE___P_D__3B__P_04X_SIZE	16
#define AVR_BRVC___P_D__3B__P_04X_SIZE	16
#define AVR_BRVS___P_D__3B__P_04X_SIZE	16
#define AVR_BRTC___P_D__3B__P_04X_SIZE	16
#define AVR_BRTS___P_D__3B__P_04X_SIZE	16
#define AVR_BRHC___P_D__3B__P_04X_SIZE	16
#define AVR_BRHS___P_D__3B__P_04X_SIZE	16
#define AVR_BRLT___P_D__3B__P_04X_SIZE	16
#define AVR_BRGE___P_D__3B__P_04X_SIZE	16
#define AVR_BRPL___P_D__3B__P_04X_SIZE	16
#define AVR_BRMI___P_D__3B__P_04X_SIZE	16
#define AVR_BRCC___P_D__3B__P_04X_SIZE	16
#define AVR_BRCS___P_D__3B__P_04X_SIZE	16
#define AVR_BRNE___P_D__3B__P_04X_SIZE	16
#define AVR_BREQ___P_D__3B__P_04X_SIZE	16
#define AVR_SBIC_IOD__D_SIZE	16
#define AVR_SBIC_IOD__D_0_SIZE	16
#define AVR_SBRS_RD__D_SIZE	16
#define AVR_SBRC_RD__D_SIZE	16
#define AVR_CPI_RD__0X02X__3B_D_SIZE	16
#define AVR_CPC_RD__RD_SIZE	16
#define AVR_CP_RD__RD_SIZE	16
#define AVR_CSPE_RD__RD_SIZE	16
#define AVR_RETI_SIZE	16
#define AVR_RET_SIZE	16
#define AVR_ICALL_SIZE	16
#define AVR_RCALL_D__LP_04X_RP__SIZE	16
#define AVR_IJMP_SIZE	16
#define AVR_RJMP___P_D__3B_04X_SIZE	16
#define AVR_FMULSU_RD__RD_SIZE	16
#define AVR_FMULS_RD__RD_SIZE	16
#define AVR_FMUL_RD__RD_SIZE	16
#define AVR_MULSU_RD__RD_SIZE	16
#define AVR_MULS_RD__RD_SIZE	16
#define AVR_MUL_RD__RD_SIZE	16
#define AVR_DEC_RD_SIZE	16
#define AVR_INC_RD_SIZE	16
#define AVR_NEG_RD_SIZE	16
#define AVR_COM_RD_SIZE	16
#define AVR_EOR_RD__RD_SIZE	16
#define AVR_ORI_RD__D_SIZE	16
#define AVR_OR_RD__RD_SIZE	16
#define AVR_ANDI_RD__RD_SIZE	16
#define AVR_AND_RD__RD_SIZE	16
#define AVR_SBIW_RD_3ARD__D_SIZE	16
#define AVR_SBCI_RD__D_SIZE	16
#define AVR_SBC_RD__RD_SIZE	16
#define AVR_SUBI_RD__D_SIZE	16
#define AVR_SUB_RD__RD_SIZE	16
#define AVR_ADIW_RD_3ARD__D_SIZE	16
#define AVR_ADC_RD__RD_SIZE	16
#define AVR_ADD_RD__RD_SIZE	16
#define AVR_CBI_IOD__D_SIZE	16
#define AVR_SBI_IOD__D_SIZE	16
#define AVR_CLH_SIZE	16
#define AVR_SEH_SIZE	16
#define AVR_CLT_SIZE	16
#define AVR_SET_SIZE	16
#define AVR_CLV_SIZE	16
#define AVR_SEV_SIZE	16
#define AVR_CLS_SIZE	16
#define AVR_SES_SIZE	16
#define AVR_CLI_SIZE	16
#define AVR_SEI_SIZE	16
#define AVR_CLZ_SIZE	16
#define AVR_SEZ_SIZE	16
#define AVR_CLN_SIZE	16
#define AVR_SEN_SIZE	16
#define AVR_CLC_SIZE	16
#define AVR_SEC_SIZE	16
#define AVR_BST_RD__D_SIZE	16
#define AVR_BLD_RD__D_SIZE	16
#define AVR_SWAP_RD_SIZE	16
#define AVR_ASR_RD_SIZE	16
#define AVR_ROR_RD_SIZE	16
#define AVR_LSR_RD_SIZE	16
#define AVR_LPM_RD__Z_P__SIZE	16
#define AVR_LPM_RD__Z_SIZE	16
#define AVR_LPM_SIZE	16
#define AVR_LAC_Z__RD_SIZE	16
#define AVR_LAT_Z__RD_SIZE	16
#define AVR_LAS_Z__RD_SIZE	16
#define AVR_XCH_Z__RD_SIZE	16
#define AVR_POP_RD_SIZE	16
#define AVR_PUSH_RD_SIZE	16
#define AVR_OUT_D__RD_SIZE	16
#define AVR_IN_RD__D_SIZE	16
#define AVR_ST_Z_P___RD_SIZE	16
#define AVR_ST__M_Z__RD_SIZE	16
#define AVR_STD_Z_P_D__RD_SIZE	16
#define AVR_ST_Y_P___RD_SIZE	16
#define AVR_ST__M_Y__RD_SIZE	16
#define AVR_STD_Y_P_D__RD_SIZE	16
#define AVR_ST_X_P___RD_SIZE	16
#define AVR_ST__M_X__RD_SIZE	16
#define AVR_ST_X__RD_SIZE	16
#define AVR_LDD_RD__Z_P_D_SIZE	16
#define AVR_LD_RD___M_Z_SIZE	16
#define AVR_LD_RD__Z_P__SIZE	16
#define AVR_LDD_RD__Y_P_D_SIZE	16
#define AVR_LD_RD___M_Y_SIZE	16
#define AVR_LD_RD__Y_P__SIZE	16
#define AVR_LD_RD___M_X_SIZE	16
#define AVR_LD_RD__X_P__SIZE	16
#define AVR_LD_RD__X_SIZE	16
#define AVR_MOVW_RD_3AD__RD_3AD_SIZE	16
#define AVR_MOV_RD__RD_SIZE	16
#define AVR_LDI_RD__D_SIZE	16
*/


/* parameter access and instruction size macros */
#define AVR_UNKNOWN___IADDR			((inst)->addr)
#define AVR_UNKNOWN___ISIZE			16
#define AVR_CALL_D__LP_04X_RP____IADDR		((inst)->addr)
#define AVR_CALL_D__LP_04X_RP____ISIZE		32
#define AVR_CALL_D__LP_04X_RP__x_x_k		((inst)->instrinput[0].val.uint32)
#define AVR_JMP_D__LP_04X_RP____IADDR		((inst)->addr)
#define AVR_JMP_D__LP_04X_RP____ISIZE		32
#define AVR_JMP_D__LP_04X_RP__x_x_k		((inst)->instrinput[0].val.uint32)
#define AVR_STS_D__RD___IADDR		((inst)->addr)
#define AVR_STS_D__RD___ISIZE		32
#define AVR_STS_D__RD_x_x_a		((inst)->instrinput[0].val.uint16)
#define AVR_STS_D__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_LDS_RD__0X04X___IADDR		((inst)->addr)
#define AVR_LDS_RD__0X04X___ISIZE		32
#define AVR_LDS_RD__0X04X_x_x_k		((inst)->instrinput[0].val.uint16)
#define AVR_LDS_RD__0X04X_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_BRID___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRID___P_D__3B__P_04X___ISIZE		16
#define AVR_BRID___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BRIE___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRIE___P_D__3B__P_04X___ISIZE		16
#define AVR_BRIE___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BRVC___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRVC___P_D__3B__P_04X___ISIZE		16
#define AVR_BRVC___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BRVS___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRVS___P_D__3B__P_04X___ISIZE		16
#define AVR_BRVS___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BRTC___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRTC___P_D__3B__P_04X___ISIZE		16
#define AVR_BRTC___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BRTS___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRTS___P_D__3B__P_04X___ISIZE		16
#define AVR_BRTS___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BRHC___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRHC___P_D__3B__P_04X___ISIZE		16
#define AVR_BRHC___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BRHS___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRHS___P_D__3B__P_04X___ISIZE		16
#define AVR_BRHS___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BRLT___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRLT___P_D__3B__P_04X___ISIZE		16
#define AVR_BRLT___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BRGE___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRGE___P_D__3B__P_04X___ISIZE		16
#define AVR_BRGE___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BRPL___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRPL___P_D__3B__P_04X___ISIZE		16
#define AVR_BRPL___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BRMI___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRMI___P_D__3B__P_04X___ISIZE		16
#define AVR_BRMI___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BRCC___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRCC___P_D__3B__P_04X___ISIZE		16
#define AVR_BRCC___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BRCS___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRCS___P_D__3B__P_04X___ISIZE		16
#define AVR_BRCS___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BRNE___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BRNE___P_D__3B__P_04X___ISIZE		16
#define AVR_BRNE___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_BREQ___P_D__3B__P_04X___IADDR		((inst)->addr)
#define AVR_BREQ___P_D__3B__P_04X___ISIZE		16
#define AVR_BREQ___P_D__3B__P_04X_x_x_k		((inst)->instrinput[0].val.int8)
#define AVR_SBIC_IOD__D___IADDR		((inst)->addr)
#define AVR_SBIC_IOD__D___ISIZE		16
#define AVR_SBIC_IOD__D_x_x_b		((inst)->instrinput[0].val.uint8)
#define AVR_SBIC_IOD__D_x_x_a		((inst)->instrinput[1].val.uint8)
#define AVR_SBIC_IOD__D_0___IADDR		((inst)->addr)
#define AVR_SBIC_IOD__D_0___ISIZE		16
#define AVR_SBIC_IOD__D_0_x_x_b		((inst)->instrinput[0].val.uint8)
#define AVR_SBIC_IOD__D_0_x_x_a		((inst)->instrinput[1].val.uint8)
#define AVR_SBRS_RD__D___IADDR		((inst)->addr)
#define AVR_SBRS_RD__D___ISIZE		16
#define AVR_SBRS_RD__D_x_x_b		((inst)->instrinput[0].val.uint8)
#define AVR_SBRS_RD__D_x_x_r		((inst)->instrinput[1].val.uint8)
#define AVR_SBRC_RD__D___IADDR		((inst)->addr)
#define AVR_SBRC_RD__D___ISIZE		16
#define AVR_SBRC_RD__D_x_x_b		((inst)->instrinput[0].val.uint8)
#define AVR_SBRC_RD__D_x_x_r		((inst)->instrinput[1].val.uint8)
#define AVR_CPI_RD__0X02X__3B_D___IADDR		((inst)->addr)
#define AVR_CPI_RD__0X02X__3B_D___ISIZE		16
#define AVR_CPI_RD__0X02X__3B_D_x_x_k		((inst)->instrinput[0].val.uint8)
#define AVR_CPI_RD__0X02X__3B_D_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_CPC_RD__RD___IADDR		((inst)->addr)
#define AVR_CPC_RD__RD___ISIZE		16
#define AVR_CPC_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_CPC_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_CP_RD__RD___IADDR		((inst)->addr)
#define AVR_CP_RD__RD___ISIZE		16
#define AVR_CP_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_CP_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_CSPE_RD__RD___IADDR		((inst)->addr)
#define AVR_CSPE_RD__RD___ISIZE		16
#define AVR_CSPE_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_CSPE_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_RETI___IADDR		((inst)->addr)
#define AVR_RETI___ISIZE		16
#define AVR_RET___IADDR		((inst)->addr)
#define AVR_RET___ISIZE		16
#define AVR_ICALL___IADDR		((inst)->addr)
#define AVR_ICALL___ISIZE		16
#define AVR_RCALL_D__LP_04X_RP____IADDR		((inst)->addr)
#define AVR_RCALL_D__LP_04X_RP____ISIZE		16
#define AVR_RCALL_D__LP_04X_RP__x_x_k		((inst)->instrinput[0].val.int16)
#define AVR_IJMP___IADDR		((inst)->addr)
#define AVR_IJMP___ISIZE		16
#define AVR_RJMP___P_D__3B_04X___IADDR		((inst)->addr)
#define AVR_RJMP___P_D__3B_04X___ISIZE		16
#define AVR_RJMP___P_D__3B_04X_x_x_k		((inst)->instrinput[0].val.int16)
#define AVR_FMULSU_RD__RD___IADDR		((inst)->addr)
#define AVR_FMULSU_RD__RD___ISIZE		16
#define AVR_FMULSU_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_FMULSU_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_FMULS_RD__RD___IADDR		((inst)->addr)
#define AVR_FMULS_RD__RD___ISIZE		16
#define AVR_FMULS_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_FMULS_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_FMUL_RD__RD___IADDR		((inst)->addr)
#define AVR_FMUL_RD__RD___ISIZE		16
#define AVR_FMUL_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_FMUL_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_MULSU_RD__RD___IADDR		((inst)->addr)
#define AVR_MULSU_RD__RD___ISIZE		16
#define AVR_MULSU_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_MULSU_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_MULS_RD__RD___IADDR		((inst)->addr)
#define AVR_MULS_RD__RD___ISIZE		16
#define AVR_MULS_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_MULS_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_MUL_RD__RD___IADDR		((inst)->addr)
#define AVR_MUL_RD__RD___ISIZE		16
#define AVR_MUL_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_MUL_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_DEC_RD___IADDR		((inst)->addr)
#define AVR_DEC_RD___ISIZE		16
#define AVR_DEC_RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_INC_RD___IADDR		((inst)->addr)
#define AVR_INC_RD___ISIZE		16
#define AVR_INC_RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_NEG_RD___IADDR		((inst)->addr)
#define AVR_NEG_RD___ISIZE		16
#define AVR_NEG_RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_COM_RD___IADDR		((inst)->addr)
#define AVR_COM_RD___ISIZE		16
#define AVR_COM_RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_EOR_RD__RD___IADDR		((inst)->addr)
#define AVR_EOR_RD__RD___ISIZE		16
#define AVR_EOR_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_EOR_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_ORI_RD__D___IADDR		((inst)->addr)
#define AVR_ORI_RD__D___ISIZE		16
#define AVR_ORI_RD__D_x_x_k		((inst)->instrinput[0].val.uint8)
#define AVR_ORI_RD__D_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_OR_RD__RD___IADDR		((inst)->addr)
#define AVR_OR_RD__RD___ISIZE		16
#define AVR_OR_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_OR_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_ANDI_RD__RD___IADDR		((inst)->addr)
#define AVR_ANDI_RD__RD___ISIZE		16
#define AVR_ANDI_RD__RD_x_x_k		((inst)->instrinput[0].val.uint8)
#define AVR_ANDI_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_AND_RD__RD___IADDR		((inst)->addr)
#define AVR_AND_RD__RD___ISIZE		16
#define AVR_AND_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_AND_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_SBIW_RD_3ARD__D___IADDR		((inst)->addr)
#define AVR_SBIW_RD_3ARD__D___ISIZE		16
#define AVR_SBIW_RD_3ARD__D_x_x_k		((inst)->instrinput[0].val.uint8)
#define AVR_SBIW_RD_3ARD__D_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_SBCI_RD__D___IADDR		((inst)->addr)
#define AVR_SBCI_RD__D___ISIZE		16
#define AVR_SBCI_RD__D_x_x_k		((inst)->instrinput[0].val.uint8)
#define AVR_SBCI_RD__D_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_SBC_RD__RD___IADDR		((inst)->addr)
#define AVR_SBC_RD__RD___ISIZE		16
#define AVR_SBC_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_SBC_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_SUBI_RD__D___IADDR		((inst)->addr)
#define AVR_SUBI_RD__D___ISIZE		16
#define AVR_SUBI_RD__D_x_x_k		((inst)->instrinput[0].val.uint8)
#define AVR_SUBI_RD__D_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_SUB_RD__RD___IADDR		((inst)->addr)
#define AVR_SUB_RD__RD___ISIZE		16
#define AVR_SUB_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_SUB_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_ADIW_RD_3ARD__D___IADDR		((inst)->addr)
#define AVR_ADIW_RD_3ARD__D___ISIZE		16
#define AVR_ADIW_RD_3ARD__D_x_x_k		((inst)->instrinput[0].val.uint8)
#define AVR_ADIW_RD_3ARD__D_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_ADC_RD__RD___IADDR		((inst)->addr)
#define AVR_ADC_RD__RD___ISIZE		16
#define AVR_ADC_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_ADC_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_ADD_RD__RD___IADDR		((inst)->addr)
#define AVR_ADD_RD__RD___ISIZE		16
#define AVR_ADD_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_ADD_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_CBI_IOD__D___IADDR		((inst)->addr)
#define AVR_CBI_IOD__D___ISIZE		16
#define AVR_CBI_IOD__D_x_x_b		((inst)->instrinput[0].val.uint8)
#define AVR_CBI_IOD__D_x_x_a		((inst)->instrinput[1].val.uint8)
#define AVR_SBI_IOD__D___IADDR		((inst)->addr)
#define AVR_SBI_IOD__D___ISIZE		16
#define AVR_SBI_IOD__D_x_x_b		((inst)->instrinput[0].val.uint8)
#define AVR_SBI_IOD__D_x_x_a		((inst)->instrinput[1].val.uint8)
#define AVR_CLH___IADDR		((inst)->addr)
#define AVR_CLH___ISIZE		16
#define AVR_SEH___IADDR		((inst)->addr)
#define AVR_SEH___ISIZE		16
#define AVR_CLT___IADDR		((inst)->addr)
#define AVR_CLT___ISIZE		16
#define AVR_SET___IADDR		((inst)->addr)
#define AVR_SET___ISIZE		16
#define AVR_CLV___IADDR		((inst)->addr)
#define AVR_CLV___ISIZE		16
#define AVR_SEV___IADDR		((inst)->addr)
#define AVR_SEV___ISIZE		16
#define AVR_CLS___IADDR		((inst)->addr)
#define AVR_CLS___ISIZE		16
#define AVR_SES___IADDR		((inst)->addr)
#define AVR_SES___ISIZE		16
#define AVR_CLI___IADDR		((inst)->addr)
#define AVR_CLI___ISIZE		16
#define AVR_SEI___IADDR		((inst)->addr)
#define AVR_SEI___ISIZE		16
#define AVR_CLZ___IADDR		((inst)->addr)
#define AVR_CLZ___ISIZE		16
#define AVR_SEZ___IADDR		((inst)->addr)
#define AVR_SEZ___ISIZE		16
#define AVR_CLN___IADDR		((inst)->addr)
#define AVR_CLN___ISIZE		16
#define AVR_SEN___IADDR		((inst)->addr)
#define AVR_SEN___ISIZE		16
#define AVR_CLC___IADDR		((inst)->addr)
#define AVR_CLC___ISIZE		16
#define AVR_SEC___IADDR		((inst)->addr)
#define AVR_SEC___ISIZE		16
#define AVR_BST_RD__D___IADDR		((inst)->addr)
#define AVR_BST_RD__D___ISIZE		16
#define AVR_BST_RD__D_x_x_b		((inst)->instrinput[0].val.uint8)
#define AVR_BST_RD__D_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_BLD_RD__D___IADDR		((inst)->addr)
#define AVR_BLD_RD__D___ISIZE		16
#define AVR_BLD_RD__D_x_x_b		((inst)->instrinput[0].val.uint8)
#define AVR_BLD_RD__D_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_SWAP_RD___IADDR		((inst)->addr)
#define AVR_SWAP_RD___ISIZE		16
#define AVR_SWAP_RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_ASR_RD___IADDR		((inst)->addr)
#define AVR_ASR_RD___ISIZE		16
#define AVR_ASR_RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_ROR_RD___IADDR		((inst)->addr)
#define AVR_ROR_RD___ISIZE		16
#define AVR_ROR_RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_LSR_RD___IADDR		((inst)->addr)
#define AVR_LSR_RD___ISIZE		16
#define AVR_LSR_RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_LPM_RD__Z_P____IADDR		((inst)->addr)
#define AVR_LPM_RD__Z_P____ISIZE		16
#define AVR_LPM_RD__Z_P__x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_LPM_RD__Z___IADDR		((inst)->addr)
#define AVR_LPM_RD__Z___ISIZE		16
#define AVR_LPM_RD__Z_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_LPM___IADDR		((inst)->addr)
#define AVR_LPM___ISIZE		16
#define AVR_LAC_Z__RD___IADDR		((inst)->addr)
#define AVR_LAC_Z__RD___ISIZE		16
#define AVR_LAC_Z__RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_LAT_Z__RD___IADDR		((inst)->addr)
#define AVR_LAT_Z__RD___ISIZE		16
#define AVR_LAT_Z__RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_LAS_Z__RD___IADDR		((inst)->addr)
#define AVR_LAS_Z__RD___ISIZE		16
#define AVR_LAS_Z__RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_XCH_Z__RD___IADDR		((inst)->addr)
#define AVR_XCH_Z__RD___ISIZE		16
#define AVR_XCH_Z__RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_POP_RD___IADDR		((inst)->addr)
#define AVR_POP_RD___ISIZE		16
#define AVR_POP_RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_PUSH_RD___IADDR		((inst)->addr)
#define AVR_PUSH_RD___ISIZE		16
#define AVR_PUSH_RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_OUT_D__RD___IADDR		((inst)->addr)
#define AVR_OUT_D__RD___ISIZE		16
#define AVR_OUT_D__RD_x_x_a		((inst)->instrinput[0].val.uint8)
#define AVR_OUT_D__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_IN_RD__D___IADDR		((inst)->addr)
#define AVR_IN_RD__D___ISIZE		16
#define AVR_IN_RD__D_x_x_a		((inst)->instrinput[0].val.uint8)
#define AVR_IN_RD__D_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_ST_Z_P___RD___IADDR		((inst)->addr)
#define AVR_ST_Z_P___RD___ISIZE		16
#define AVR_ST_Z_P___RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_ST__M_Z__RD___IADDR		((inst)->addr)
#define AVR_ST__M_Z__RD___ISIZE		16
#define AVR_ST__M_Z__RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_STD_Z_P_D__RD___IADDR		((inst)->addr)
#define AVR_STD_Z_P_D__RD___ISIZE		16
#define AVR_STD_Z_P_D__RD_x_x_q		((inst)->instrinput[0].val.uint8)
#define AVR_STD_Z_P_D__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_ST_Y_P___RD___IADDR		((inst)->addr)
#define AVR_ST_Y_P___RD___ISIZE		16
#define AVR_ST_Y_P___RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_ST__M_Y__RD___IADDR		((inst)->addr)
#define AVR_ST__M_Y__RD___ISIZE		16
#define AVR_ST__M_Y__RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_STD_Y_P_D__RD___IADDR		((inst)->addr)
#define AVR_STD_Y_P_D__RD___ISIZE		16
#define AVR_STD_Y_P_D__RD_x_x_q		((inst)->instrinput[0].val.uint8)
#define AVR_STD_Y_P_D__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_ST_X_P___RD___IADDR		((inst)->addr)
#define AVR_ST_X_P___RD___ISIZE		16
#define AVR_ST_X_P___RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_ST__M_X__RD___IADDR		((inst)->addr)
#define AVR_ST__M_X__RD___ISIZE		16
#define AVR_ST__M_X__RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_ST_X__RD___IADDR		((inst)->addr)
#define AVR_ST_X__RD___ISIZE		16
#define AVR_ST_X__RD_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_LDD_RD__Z_P_D___IADDR		((inst)->addr)
#define AVR_LDD_RD__Z_P_D___ISIZE		16
#define AVR_LDD_RD__Z_P_D_x_x_q		((inst)->instrinput[0].val.uint8)
#define AVR_LDD_RD__Z_P_D_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_LD_RD___M_Z___IADDR		((inst)->addr)
#define AVR_LD_RD___M_Z___ISIZE		16
#define AVR_LD_RD___M_Z_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_LD_RD__Z_P____IADDR		((inst)->addr)
#define AVR_LD_RD__Z_P____ISIZE		16
#define AVR_LD_RD__Z_P__x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_LDD_RD__Y_P_D___IADDR		((inst)->addr)
#define AVR_LDD_RD__Y_P_D___ISIZE		16
#define AVR_LDD_RD__Y_P_D_x_x_q		((inst)->instrinput[0].val.uint8)
#define AVR_LDD_RD__Y_P_D_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_LD_RD___M_Y___IADDR		((inst)->addr)
#define AVR_LD_RD___M_Y___ISIZE		16
#define AVR_LD_RD___M_Y_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_LD_RD__Y_P____IADDR		((inst)->addr)
#define AVR_LD_RD__Y_P____ISIZE		16
#define AVR_LD_RD__Y_P__x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_LD_RD___M_X___IADDR		((inst)->addr)
#define AVR_LD_RD___M_X___ISIZE		16
#define AVR_LD_RD___M_X_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_LD_RD__X_P____IADDR		((inst)->addr)
#define AVR_LD_RD__X_P____ISIZE		16
#define AVR_LD_RD__X_P__x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_LD_RD__X___IADDR		((inst)->addr)
#define AVR_LD_RD__X___ISIZE		16
#define AVR_LD_RD__X_x_x_d		((inst)->instrinput[0].val.uint8)
#define AVR_MOVW_RD_3AD__RD_3AD___IADDR		((inst)->addr)
#define AVR_MOVW_RD_3AD__RD_3AD___ISIZE		16
#define AVR_MOVW_RD_3AD__RD_3AD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_MOVW_RD_3AD__RD_3AD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_MOV_RD__RD___IADDR		((inst)->addr)
#define AVR_MOV_RD__RD___ISIZE		16
#define AVR_MOV_RD__RD_x_x_r		((inst)->instrinput[0].val.uint8)
#define AVR_MOV_RD__RD_x_x_d		((inst)->instrinput[1].val.uint8)
#define AVR_LDI_RD__D___IADDR		((inst)->addr)
#define AVR_LDI_RD__D___ISIZE		16
#define AVR_LDI_RD__D_x_x_k		((inst)->instrinput[0].val.uint8)
#define AVR_LDI_RD__D_x_x_d		((inst)->instrinput[1].val.uint8)


#endif /* GLISS_AVR_INCLUDE_AVR_MACROS_H */
