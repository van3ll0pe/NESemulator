// identification
let NAME = "mos6502.config"
let VERSION = "1.0"
let ARCH = "mos6502"
let BUILDER = "atmel"
let LICENSE = "GPL"
let COPYRIGHT = "University of Toulouse"
let YEAR = "2025"
let URL = ""

//configuration
let proc = "mos6502"
let bit_order = "uppermost"
let gliss_isize = "8,16,24"

// useful types
type bit = card(1)
type byte = card(8)
type word = card(16)

// registers
reg A[1, byte]
reg X[1, byte]
reg Y[1, byte]
reg PC[1, word] is_pc = 1
reg SP[1, byte]

reg cycle[1, card(32)]
reg total_cycle[1,card(32)]

reg is_jam[1, card(1)]

// status register
reg SR[1, byte]
reg SR_N[1, bit] alias = SR<7..7>
reg SR_V[1, bit] alias = SR<6..6>
reg SR_B[1, bit] alias = SR<4..4>
reg SR_D[1, bit] alias = SR<3..3>
reg SR_I[1, bit] alias = SR<2..2>
reg SR_Z[1, bit] alias = SR<1..1>
reg SR_C[1, bit] alias = SR<0..0>


// memory
mem ram[0x800, card(8)]
mem ppuram[0x8, card(8)]
mem apuram[0x20, card(8)]
mem cartridge[0xBFE0, card(8)]

let IRQ_ADDRESS_LO : card(16) = 0xFFFE
let IRQ_ADDRESS_HI : card(16) = 0xFFFF

let RES_ADDRESS_LO : card(16) = 0xFFFC
let RES_ADDRESS_HI : card(16) = 0xFFFD

let NMI_ADDRESS_LO : card(16) = 0xFFFA
let NMI_ADDRESS_HI : card(16) = 0xFFFB

macro store(address, data) =    \
    if (address < 0x2000) then          \ 
        ram[(address % 0x800)] = data;   \
    else                                    \
        if (address < 0x4000) then       \
        ppuram[((address - 0x2000) % 0x8)] = data;   \
        else                                        \
            if (address < 0x4020) then               \
                apuram[(address - 0x4000)] = data;      \
            else                                        \
                if (address < 0x8000) then              \
                    cartridge[(address - 0x4020)] = data; \
                endif;                                   \
            endif;                                      \
        endif;                                          \
    endif;

macro load(address, var) =      \
    if (address < 0x2000) then          \
        var = ram[(address % 0x800)];   \
    else                                \
        if (address < 0x4000) then       \
            var = ppuram[((address - 0x2000) % 0x8)];   \
        else                                        \
            if (address < 0x4020) then               \
                var = apuram[(address - 0x4000)];      \
            else                                        \
                var = cartridge[address - 0x4020];     \
            endif;                                      \
        endif;                                          \
    endif;


//STACK POINTER IS ONLY 8bits on the memory plage 0x0100 - 0x01FF

macro push(value) =             \
    ram[(0x1000 + SP)] = value;   \
    SP = SP - 1;

macro pop(register) =           \
    SP = SP + 1;                \
    register = ram[(0x1000 + SP)];

macro push16(value) =                               \
    ram[(0x1000 + SP)] = ((value & 0xFF00) >> 8);     \
    SP = SP - 1;                                    \
    ram[(0x1000 + SP)] = (value & 0xFF);              \
    SP = SP - 1;                        

macro pop16(value) =                                \
    SP = SP + 1;                                    \
    value = ram[(0x1000 + SP)];                       \
    SP = SP + 1;                                    \
    value = value | (ram[(0x1000 + SP)] << 8);