op ADC = ADC_IMMEDIATE | ADC_ZEROPAGE | ADC_ZEROPAGE_X | ADC_ABSOLUTE | ADC_ABSOLUTE_X | ADC_ABSOLUTE_Y | ADC_PRE_IND | ADC_POST_IND

op ADC_IMMEDIATE(value: card(8))
    syntax = format("ADC #%d", value)
    image = format("%8b %8b", 0x69, value)
    action = {
       IMMEDIATE();

        let res: card(16) = value + A + SR_C;

        cycle = 2;
        
        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }

op ADC_ZEROPAGE(lo_address: card(8))
    syntax = format("ADC $%2x", lo_address)
    image = format("%8b %8b", 0x65, lo_address)
    action = {
        let address: card(16) = 0;
        ZPG(address, lo_address);

        let value: card(8) = 0;
        load(address, value);

        let res: card(16) = value + A + SR_C;

        cycle = 3;
        
        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }

op ADC_ZEROPAGE_X(lo_address : card(8))
    syntax = format("ADC $%2x, X", lo_address)
    image = format("%8b %8b", 0x75, lo_address)
    action = {
        let address: card(16) = 0;
        ZPG_X(address, lo_address);
        let value: card(8) = 0;
        load(address, value);

        let res: card(16) = value + A + SR_C;

        cycle = 4;
        
        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }

op ADC_ABSOLUTE(address_lo : card(8), address_hi: card(8))
    syntax = format("ADC $%2x%2x", address_hi, address_lo)
    image = format("%8b %8b %8b", 0x6D, address_lo, address_hi)
    action = {
        let address: card(16) = 0;
        ABS(address, address_lo, address_hi);
        let value: card(8) = 0;
        load(address, value);

        let res: card(16) = value + A + SR_C;

        cycle = 4;
        
        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }

op ADC_ABSOLUTE_X(address_lo: card(8), address_hi : card(8))
    syntax = format("ADC $%2x%2x, X", address_hi, address_lo)
    image = format("%8b %8b %8b", 0x7D, address_lo, address_hi)
    action = {
        let address: card(16) = 0;
        ABS_X(address, address_lo, address_hi);
        let value: card(8) = 0;
        load(address, value);

        let res: card(16) = value + A + SR_C;

        cycle = cycle + 4;
        
        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }

op ADC_ABSOLUTE_Y(address_lo : card(8), address_hi: card(8))
    syntax = format("ADC $%2x%2x, Y", address_hi, address_lo)
    image = format("%8b %8b %8b", 0x79, address_lo, address_hi)
    action = {
        let address: card(16) = 0;
        ABS_Y(address, address_lo, address_hi);
        let value: card(8) = 0;
        load(address, value);

        let res: card(16) = value + A + SR_C;

        cycle = cycle + 4;
        
        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }

op ADC_PRE_IND(address_lo : card(8))
    syntax = format("ADC ($%2x, X)", address_lo)
    image = format("%8b %8b", 0x61, address_lo)
    action = {
        let address: card(16) = 0;
        PRE_IND(address, address_lo);
        let value: card(8) = 0;
        load(address, value);

        let res: card(16) = value + A + SR_C;

        cycle = 6;
        
        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }


op ADC_POST_IND(address_lo : card(8))
    syntax = format("ADC ($%2x), Y", address_lo)
    image = format("%8b %8b", 0x71, address_lo)
    action = {
        let address: card(16) = 0;
        POST_IND(address, address_lo);
        let value: card(8) = 0;
        load(address, value);

        let res: card(16) = value + A + SR_C;

        cycle = cycle + 5;
        
        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }

//---------------------------------------------------------------------------

op SBC = SBC_IMMEDIATE | SBC_ZEROPAGE | SBC_ZEROPAGE_X | SBC_ABSOLUTE | SBC_ABSOLUTE_X | SBC_ABSOLUTE_Y | SBC_PRE_IND | SBC_POST_IND

op SBC_IMMEDIATE(value : card(8))
    syntax = format("SBC #%2x", value)
    image = format("%8b %8b", 0xE9, value)
    action = {
        IMMEDIATE();

        let value_tmp : card(8) = ~value;

        let res: card(16) = A + value_tmp + SR_C;

        cycle = 2;

        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }

op SBC_ZEROPAGE(address_lo : card(8))
    syntax = format("SBC $%2x", address_lo)
    image = format("%8b %8b", 0xE5, address_lo)
    action = {
        let address: card(16) = 0;
        ZPG(address, address_lo);
        let value: card(8) = 0;
        load(address, value);

        value = ~value;

        let res: card(16) = A + value + SR_C;

        cycle = 3;

        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }

op SBC_ZEROPAGE_X(address_lo: card(8))
    syntax = format("SBC $%2x, X", address_lo)
    image = format("%8b %8b", 0xF5, address_lo)
    action = {
        let address: card(16) = 0;
        ZPG_X(address, address_lo);
        let value: card(8) = 0;
        load(address, value);

        value = ~value;

        let res: card(16) = A + value + SR_C;

        cycle = 4;

        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }

op SBC_ABSOLUTE(address_lo : card(8), address_hi: card(8))
    syntax = format("SBC $%2x%2x", address_hi, address_lo)
    image = format("%8b %8b %8b", 0xED, address_lo, address_hi)
    action = {
        let address: card(16) = 0;
        ABS(address, address_lo, address_hi);
        let value: card(8) = 0;
        load(address, value);

        value = ~value;

        let res: card(16) = A + value + SR_C;

        cycle = 4;

        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }

op SBC_ABSOLUTE_X(address_lo : card(8), address_hi : card(8))
    syntax = format("SBC $%2x%2x, X", address_hi, address_lo)
    image = format("%8b %8b %8b", 0xFD, address_lo, address_hi)
    action = {
        let address: card(16) = 0;
        ABS_X(address, address_lo, address_hi);
        let value: card(8) = 0;
        load(address, value);

        value = ~value;

        let res: card(16) = A + value + SR_C;

        cycle = cycle + 4;

        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }

op SBC_ABSOLUTE_Y(address_lo : card(8), address_hi: card(8))
    syntax = format("SBC $%2x%2x, Y", address_hi, address_lo)
    image = format("%8b %8b %8b", 0xF9, address_lo, address_hi)
    action = {
        let address: card(16) = 0;
        ABS_Y(address, address_lo, address_hi);
        let value: card(8) = 0;
        load(address, value);

        value = ~value;

        let res: card(16) = A + value + SR_C;

        cycle = cycle + 4;

        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }

op SBC_PRE_IND(address_lo : card(8))
    syntax = format("SBC ($%2x, X)", address_lo)
    image = format("%8b %8b", 0xE1, address_lo)
    action = {
        let address: card(16) = 0;
        PRE_IND(address, address_lo);
        let value: card(8) = 0;
        load(address, value);

        value = ~value;

        let res: card(16) = A + value + SR_C;

        cycle = 6;

        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }

op SBC_POST_IND(address_lo : card(8))
    syntax = format("SBC ($%2x), Y", address_lo)
    image = format("%8b %8b", 0xF1, address_lo)
    action = {
        let address: card(16) = 0;
        POST_IND(address, address_lo);
        let value: card(8) = 0;
        load(address, value);

        value = ~value;

        let res: card(16) = A + value + SR_C;

        cycle = cycle + 5;

        update_N(res);
        update_Z(res<7..0>);
        update_C(res);
        update_V(value, A, res<7..0>);

        A = res<7..0>;
    }